name: Azure Actions

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'You'
      home:
        description: 'location'
        required: false
        default: 'The Universe'

jobs:
  image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        generateImage: [true, false]
        createVMSS: [true, false]
        updateVMSS: [true, false]

    steps:
      - name: Hello
        shell: pwsh
        run: |
          echo "Hello ${{ github.event.inputs.name }}!"
          echo "- in ${{ github.event.inputs.home }}!"

      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Clone Repository
        if: matrix.generateImage == 'true'
        run: |
          ./.scripts/functions.ps1
          Copy-Repository -workingDirectory ${{ github.workspace }}

      - name: Generate Image
        if: matrix.generateImage == 'true'
        run: |
          ./.scripts/functions.ps1
          New-Image -workingDirectory ${{ github.workspace }} -subscriptionId ${{ secrets.SUBSCRIPTION_ID }} -tenantId ${{ secrets.TENANT_ID }} -servicePrincipalId ${{ secrets.servicePrincipalId }} -servicePrincipalKey ${{ secrets.servicePrincipalKey }} -resourceGroupName ${{ secrets.RESOURCE_GROUP_NAME }} -imageType ${{ secrets.IMAGE_TYPE }} -location ${{ secrets.LOCATION }} -debugPacker ${{ secrets.DEBUG_PACKER }}

      - name: Create VMSS
        if: matrix.createVMSS == 'true'
        run: |
          ./.scripts/functions.ps1
          New-VMSS -resourceGroupName ${{ secrets.RESOURCE_GROUP_NAME_VMSS }} -imageType ${{ secrets.IMAGE_TYPE }} -location ${{ secrets.LOCATION }}

      - name: Update VMSS
        if: matrix.updateVMSS == 'true'
        run: |
          ./.scripts/functions.ps1
          Update-VMSS -resourceGroupNameVMSS ${{ secrets.RESOURCE_GROUP_NAME_VMSS }} -imageType ${{ secrets.IMAGE_TYPE }}
